<!DOCTYPE html>
<html lang="en">

<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>การเข้าใช้งาน</title>
  <%- include("./partials/header.ejs")%>
  <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/css/bootstrap.min.css" rel="stylesheet" integrity="sha384-T3c6CoIi6uLrA9TneNEoa7RxnatzjcDSCmG1MXxSR1GAsXEV/Dwwykc2MPK8M2HN" crossorigin="anonymous">

  <style>
    table {
      width: 100%;
      border-collapse: collapse;
      position: relative;
    }

    th {
      text-align: center !important;
      position: sticky;
      top: 0;
      background-color: #f2f2f2;
      z-index: 1;
    }

    th,
    td {
      border: 1px solid #ddd;
      padding: 0.5em !important;
    }

    th {
      text-align: left;
    }

    #logs {
      padding: 10px;
      max-height: 400px;
      overflow: auto;
      white-space: nowrap;
      border-radius: 0.25em !important;
    }

    .add-button {
      width: fit-content !important;
    }

    .list-header {
      box-shadow: rgba(0, 0, 0, 0.15) 1.95px 1.95px 2.6px !important;
    }

    .p-header-1,
    .p-header-2 {
      border-right: 1px solid #999999 !important;
    }

    .p-header-4 {
      border-left: 1px solid #999999 !important;
    }

    .student-list {
      border-bottom: 1px solid #cdcdcd !important;
      color: #898989 !important;
    }

    .email-p {
      font-size: smaller !important;
    }

    .link-list {
      text-decoration: none !important;
    }

    .link-list:hover .student-list {
      color: black !important;
      transition: 0.3s;
    }

    .addContent-a {
      text-decoration: none !important;
      transition-duration: 0.3s;
    }

    .addContent-a:hover {
      color: #0d57d6 !important;
      transition: 0.3s;
    }

    #sortCharacter,
    #sortTime,
    #sortIP,
    #exportLogs {
      border-radius: 0.25em;
      margin-right: 1em !important;
      border: 1px solid #cdcdcd !important;

    }

    .custom-dropdown {
      position: relative !important;
      display: inline-block !important;
    }

    /* .custom-dropdown:hover {
      background-color: #4c5258 !important;
    } */

    .custom-dropdown-toggle {
      background-color: #6c757d !important;
      color: white !important;
      padding: 10px 20px !important;
      border: none !important;
      cursor: pointer !important;
      border-radius: 4px !important;
    }

    .custom-dropdown-toggle:after {
      margin-left: 10px !important;
    }

    .custom-dropdown-menu {
      display: none !important;
      position: absolute !important;
      background-color: white !important;
      box-shadow: 0 8px 16px rgba(0, 0, 0, 0.2) !important;
      z-index: 10 !important;
      list-style: none !important;
      padding: 0 !important;
      margin: 0 !important;
      border-radius: 4px !important;
    }

    .custom-dropdown-item {
      padding: 10px 20px !important;
      display: block !important;
      color: black !important;
      text-decoration: none !important;
    }

    .custom-dropdown-item:hover {
      background-color: #f1f1f1 !important;
    }

    .custom-dropdown.show .custom-dropdown-menu {
      display: block !important;
    }

    .custom-btn:hover {
      background-color: #5a6167 !important;
      transition: 0.3s;
      transition-duration: 0.3s;
    }

    .custom-dropdown-label {
      background-color: #f7f7f7;
      border-radius: 4px !important;
      width: 100%;

    }

    td {
      color: #6c757d;
    }
  </style>
</head>

<body>
  <div id="blur-container">
    <%- include("./partials/nav.ejs")%>
    <!-- <div class="above-nav d-flex px-4 py-3">
      <div class="home-div above-nav-home d-flex mx-2 my-0 align-middle">
        <i class="bi bi-house mx-2"></i>
        <a href="/adminIndex" class="a-home">
          <p class="m-0">หน้าหลัก &nbsp;&nbsp;></p>
        </a>
      </div>
      <a href="#" class="status-a mx-2 my-0 align-middle">
        <p class="m-0">บทเรียน</p>
      </a>
    </div> -->
  </div>
  <div class="main-content d-flex w-100 h-auto">
    <%- include("./partials/lessonsList.ejs")%>
    <div class="aside-right w-75 h-auto p-4">
      <div class="manange-bar p-3 bg-white d-flex w-100">
        <p class="fw-bold fs-3">การเข้าใช้งาน (Logs File)</p>

        <div class="custom-dropdown">
          <button class="custom-btn custom-dropdown-toggle">ดาวน์โหลด logs file (export)<i class="bi bi-chevron-down mx-2"></i>
          </button>
          <ul class="custom-dropdown-menu">
            <!-- <label class="py-1 px-2 text-start custom-dropdown-label">เลือกประเภทไฟล์</label> -->
            <li><a class="custom-dropdown-item" href="/exportLogs?value=excel">Exel (logs.xlsx)</a></li>
            <li><a class="custom-dropdown-item" href="/exportLogs?value=csv">CSV (logs.csv)</a></li>
            <li><a class="custom-dropdown-item" href="/exportLogs?value=plain">Text-based Logs (app.log)</a></li>
            <li><a class="custom-dropdown-item" href="/exportLogs?value=xml">XML (logs.xml)</a></li>
            <li><a class="custom-dropdown-item" href="/exportLogs?value=yaml">YAML (logs.yaml)</a></li>
            <li><a class="custom-dropdown-item" href="/exportLogs?value=json">JSON (logs.json)</a></li>

            <!-- <li><a class="custom-dropdown-item" href="#">Something else here</a></li> -->
          </ul>
        </div>

      </div>
      <div class="my-4 mb-3">
        <label for="sortCharacter">เรียงตามลำดับตัวอักษร:</label>
        <select id="sortCharacter">
          <option value="asc">A-Z</option>
          <option value="desc">Z-A</option>
        </select>

        <label for="sortTime">เรียงตามวันที่และเวลา:</label>
        <select id="sortTime">
          <option value="newest">ล่าสุด-เก่าที่สุด</option>
          <option value="oldest">เก่าที่สุด-ล่าสุด</option>
        </select>

        <label for="sortIP">เรียงเลข IP ตามลำดับตัวเลข:</label>
        <select id="sortIP">
          <option value="asc">น้อยที่สุด-มากที่สุด</option>
          <option value="desc">มากที่สุด-น้อยที่สุด</option>
        </select>

      </div>
      <div id="logs" class="lesson-content w-auto h-auto">Loading logs...</div>
    </div>
  </div>
  <%- include("./partials/footer.ejs")%>
  <script>
    document.addEventListener('DOMContentLoaded', function() {
      const dropdownToggle = document.querySelector('.custom-dropdown-toggle');
      const dropdownMenu = document.querySelector('.custom-dropdown-menu');

      dropdownToggle.addEventListener('click', function() {
        const dropdown = this.parentElement;
        dropdown.classList.toggle('show');
      });

      // Close the dropdown if the user clicks outside of it
      window.addEventListener('click', function(e) {
        if (!e.target.matches('.custom-dropdown-toggle')) {
          const dropdowns = document.querySelectorAll('.custom-dropdown');
          dropdowns.forEach(function(dropdown) {
            dropdown.classList.remove('show');
          });
        }
      });
    });
    // function exportLogs() {
    //   const selectElement = document.getElementById('exportLogs');
    //   const selectedValue = selectElement.value;

    //   fetch('/exportLogs', {
    //     method: 'POST', 
    //     headers: {
    //         'Content-Type': 'application/json', 
    //     },
    //     body: JSON.stringify({ value: selectedValue }),
    // })

    // }

    fetch('/logs')
      .then(response => response.json())
      .then(data => {
        const logsDiv = document.getElementById('logs');
        let logs = data.logs;

        const renderTable = (logs) => {
          logsDiv.innerHTML = ''; // เคลียร์เนื้อหาเก่า

          // สร้างตาราง
          const table = document.createElement('table');
          const headerRow = document.createElement('tr');
          const headers = ['email', 'วันที่และเวลา (time)', 'กิจกรรม (action)', 'IP Address', 'เบราว์เซอร์ (browser)'];

          headers.forEach(headerText => {
            const th = document.createElement('th');
            th.textContent = headerText;
            headerRow.appendChild(th);
          });
          table.appendChild(headerRow);

          // วนลูปเพื่อสร้างแถวและเซลล์ของแต่ละ log
          logs.forEach(log => {
            const row = document.createElement('tr');

            // สร้างเซลล์และใส่ข้อมูลลงไป
            const roleCell = document.createElement('td');
            roleCell.textContent = log.user || 'N/A';
            row.appendChild(roleCell);

            const timestampCell = document.createElement('td');
            timestampCell.textContent = log.timestamp;
            row.appendChild(timestampCell);

            const actionCell = document.createElement('td');
            actionCell.textContent = log.action || log.message || 'N/A';
            row.appendChild(actionCell);

            const ipCell = document.createElement('td');
            ipCell.textContent = log.ip || 'N/A';
            row.appendChild(ipCell);

            const userAgentCell = document.createElement('td');
            userAgentCell.textContent = log.userAgent || 'N/A';
            row.appendChild(userAgentCell);

            table.appendChild(row);
          });

          logsDiv.appendChild(table);
        };

        renderTable(logs);

        const sortLogs = (logs, criterion, order) => {
          return logs.sort((a, b) => {
            if (criterion === 'role' || criterion === 'action' || criterion === 'userAgent') {
              if (a[criterion] < b[criterion]) return order === 'asc' ? -1 : 1;
              if (a[criterion] > b[criterion]) return order === 'asc' ? 1 : -1;
              return 0;
            } else if (criterion === 'timestamp') {
              return order === 'newest' ? new Date(b.timestamp) - new Date(a.timestamp) : new Date(a.timestamp) - new Date(b.timestamp);
            } else if (criterion === 'ip') {
              //แปลง Ip ให้เป็น integer ก่อน
              const ipToNumber = ip => ip.split('.').reduce((acc, octet) => (acc << 8) + parseInt(octet), 0);
              return order === 'asc' ? ipToNumber(a.ip) - ipToNumber(b.ip) : ipToNumber(b.ip) - ipToNumber(a.ip);
            }
          });
        };

        // Event listeners
        document.getElementById('sortCharacter').addEventListener('change', (event) => {
          const criterion = 'role';
          const order = event.target.value;
          const sortedLogs = sortLogs(logs, criterion, order);
          renderTable(sortedLogs);
        });

        document.getElementById('sortTime').addEventListener('change', (event) => {
          const criterion = 'timestamp';
          const order = event.target.value;
          const sortedLogs = sortLogs(logs, criterion, order);
          renderTable(sortedLogs);
        });

        document.getElementById('sortIP').addEventListener('change', (event) => {
          const criterion = 'ip';
          const order = event.target.value;
          const sortedLogs = sortLogs(logs, criterion, order);
          renderTable(sortedLogs);
        });

      })
      .catch(error => {
        console.error('Error fetching logs:', error);
      });
  </script>
</body>

</html>